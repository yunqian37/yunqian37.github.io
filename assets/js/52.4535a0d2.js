(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{410:function(v,_,t){"use strict";t.r(_);var r=t(44),s=Object(r.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[v._v("#")]),v._v(" 模块化")]),v._v(" "),t("p",[t("strong",[v._v("模块：")]),v._v(" 将一个复杂的程序依据一定的规则（规范）封装成几个块（文件），并进行组合在一起")]),v._v(" "),t("p",[v._v("​\t\t\t块的内部数据与实现是私有的，只有向外部暴露一些接口（方法）与外部其他模块通信")]),v._v(" "),t("p",[t("strong",[v._v("模块化的好处：")])]),v._v(" "),t("ul",[t("li",[v._v("避免命名冲突（减少命名空间污染）")]),v._v(" "),t("li",[v._v("更好的分离，按需加载")]),v._v(" "),t("li",[v._v("更高复用性")]),v._v(" "),t("li",[v._v("高可维护")])]),v._v(" "),t("p",[t("strong",[v._v("引入多个script后的问题")])]),v._v(" "),t("ul",[t("li",[v._v("请求过多")]),v._v(" "),t("li",[v._v("依赖模糊：分不清具体依赖关系")]),v._v(" "),t("li",[v._v("难以维护：牵一发动全身")])]),v._v(" "),t("h3",{attrs:{id:"模块化规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化规范"}},[v._v("#")]),v._v(" 模块化规范")]),v._v(" "),t("p",[t("strong",[v._v("CommonJs：")]),v._v(" 每个文件就是一个模块，有自己的作用域。在一个文件里面定义的变量、函数、类都是私有的，对其他文件不可见。")]),v._v(" "),t("p",[t("strong",[v._v("在服务端模块的加载是运行时同步加载的，在浏览器端模块需要提前编译打包处理。")])]),v._v(" "),t("p",[t("strong",[v._v("特点：")])]),v._v(" "),t("ul",[t("li",[v._v("所有的代码都运行在模块作用域，不会污染全局作用域。")]),v._v(" "),t("li",[v._v("模块可以多次加载，但是只会在第一次加载时运行一次然后运行结果就被缓存了，以后再加载就直接读取缓存结果。要想让模块再次运行必须清除缓存。")]),v._v(" "),t("li",[v._v("模块加载的顺序按照其在代码中出现的顺序")])]),v._v(" "),t("p",[t("strong",[v._v("基本语法：")])]),v._v(" "),t("ul",[t("li",[v._v("暴露模块：module.exports 或 exports")]),v._v(" "),t("li",[v._v("引入模块：require(xxx)")])]),v._v(" "),t("p",[t("strong",[v._v("模块的加载机制：")]),v._v(" 输入的是输出的值的拷贝。即：一旦输出一个值，模块内部的变化就影响不到这个值")])])}),[],!1,null,null,null);_.default=s.exports}}]);