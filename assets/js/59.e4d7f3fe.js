(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{418:function(s,t,e){"use strict";e.r(t);var r=e(44),v=Object(r.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"服务端渲染-ssr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染-ssr"}},[s._v("#")]),s._v(" 服务端渲染 SSR")]),s._v(" "),e("p",[s._v("vue.js是构建客户端应用程序的框架。默认情况下，可以在浏览器中输出Vue组件，进行生成DOM和操作DOM。然而，也可以将同一个组件渲染为服务端的HTML字符串，将它们直接发送到浏览器，最后将这些静态标记’激活‘为客户端上完全可交互的应用程序。")]),s._v(" "),e("p",[s._v("服务器渲染的Vue.js应用程序也可以被认为是‘同构’或‘通用’，因为应用程序的大部分代码都可以在服务器和客户端上运行。")]),s._v(" "),e("p",[e("strong",[s._v("与传统SPA(单页应用程序)相比，服务端渲染(ssr)的优势：")])]),s._v(" "),e("ul",[e("li",[s._v("更好的SEO，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面")]),s._v(" "),e("li",[s._v("更快的内容到达时间，特别是对于缓慢的网络情况或运行缓慢的设备。无需等待所有的js都完成下载并执行，才显示服务器渲染的标记，用户将会更快速地看到完整渲染的页面")])]),s._v(" "),e("p",[e("strong",[s._v("缺点：")])]),s._v(" "),e("ul",[e("li",[s._v("开发条件所限。浏览器特定的代码只能在某些生命周期钩子函数中使用，一些外部扩展库可能需要特殊处理，才能在服务器渲染应用程序中运行")]),s._v(" "),e("li",[s._v("涉及构建设置和部署的更多要求。与可以部署在任何静态文件服务器上的完全静态单页面应用程序不同，服务器渲染应用程序需要处于Node.js server运行环境")]),s._v(" "),e("li",[s._v("更多的服务器端负载。在Node.js中渲染完整的应用程序，会比仅仅提供金泰文件的server更加大量占用CPU资源")])])])}),[],!1,null,null,null);t.default=v.exports}}]);